if (! this.sh_languages) {
  this.sh_languages = {};
}
sh_languages['docker'] = [
  [
    [
      /\b[+-]?(?:(?:0x[A-Fa-f0-9]+)|(?:(?:[\d]*\.)?[\d]+(?:[eE][+-]?[\d]+)?))u?(?:(?:int(?:8|16|32|64))|L)?\b/g,
      'sh_number',
      -1
    ],
    [
      /"/g,
      'sh_string',
      1
    ],
    [
      /'/g,
      'sh_string',
      2
    ],
    [
      /</g,
      'sh_string',
      3
    ],
    [
      /\/[^\n]*\/\s/g,  // anchor to \s to avoid matching directory names.
      'sh_regexp',
      -1
    ],
    [
      /(%r)(\{(?:\\\}|#\{[A-Za-z0-9]+\}|[^}])*\})/g,
      ['sh_symbol', 'sh_regexp'],
      -1
    ],
    [
      /\b[A-Za-z0-9]+(?=\s*[=|\+]>)/g,
      'sh_attribute',
      -1
    ],
    [
      /\b(?:FROM|MAINTAINER|ENV|ADD|RUN|WORKDIR|VOLUME|ONBUILD|CMD|ENTRYPOINT|EXPOSE|USER)\b/g,
      'sh_keyword',
      -1
    ],
    [
      /(?:^\=begin)/g,
      'sh_comment',
      4
    ],
    [
      /[A-Za-z0-9]+(?:\?|!)/g,
      'sh_normal',
      -1
    ],
    [
      /~|!|%|\^|\*|\(|\)|-|\+|=|\[|\]|\\|:|;|,|\.|\/|\?|&|<|>|\|/g,
      'sh_symbol',
      -1
    ],
    [
      /(#)(\{)/g,
      ['sh_symbol', 'sh_cbracket'],
      -1
    ],
    [
      /#/g,
      'sh_comment',
      1
    ],
    [
      /\{|\}/g,
      'sh_cbracket',
      -1
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ],
    [
      /\\(?:\\|")/g,
      null,
      -1
    ],
    [
      /"/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ],
    [
      /\\(?:\\|')/g,
      null,
      -1
    ],
    [
      /'/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ],
    [
      />/g,
      'sh_string',
      -2
    ]
  ],
  [
    [
      /^(?:\=end)/g,
      'sh_comment',
      5
    ]
  ],
  [
    [
      /$/g,
      null,
      -2
    ]
  ]
];
